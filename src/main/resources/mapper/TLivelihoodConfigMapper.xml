<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.TLivelihoodConfigMapper">
  <resultMap id="BaseResultMap" type="com.model.TLivelihoodConfigDo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="cfg_key" jdbcType="VARCHAR" property="cfgKey" />
    <result column="cfg_value" jdbcType="VARCHAR" property="cfgValue" />
    <result column="CFG_DESCRIPTION" jdbcType="VARCHAR" property="cfgDescription" />
    <result column="EFFECT_FLAG" jdbcType="VARCHAR" property="effectFlag" />
    <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_by" jdbcType="VARCHAR" property="updatedBy" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, cfg_key, cfg_value, CFG_DESCRIPTION, EFFECT_FLAG, created_by, created_at, updated_by, 
    updated_at
  </sql>
  <select id="selectByExample" parameterType="com.model.TLivelihoodConfigDoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_livelihood_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_livelihood_config
    where id = #{id,jdbcType=BIGINT}
  </select>
  <insert id="insert" parameterType="com.model.TLivelihoodConfigDo">
    insert into t_livelihood_config (id, cfg_key, cfg_value, 
      CFG_DESCRIPTION, EFFECT_FLAG, created_by, 
      created_at, updated_by, updated_at
      )
    values (#{id,jdbcType=BIGINT}, #{cfgKey,jdbcType=VARCHAR}, #{cfgValue,jdbcType=VARCHAR}, 
      #{cfgDescription,jdbcType=VARCHAR}, #{effectFlag,jdbcType=VARCHAR}, #{createdBy,jdbcType=VARCHAR}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{updatedBy,jdbcType=VARCHAR}, #{updatedAt,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.model.TLivelihoodConfigDo">
    insert into t_livelihood_config
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="cfgKey != null">
        cfg_key,
      </if>
      <if test="cfgValue != null">
        cfg_value,
      </if>
      <if test="cfgDescription != null">
        CFG_DESCRIPTION,
      </if>
      <if test="effectFlag != null">
        EFFECT_FLAG,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="cfgKey != null">
        #{cfgKey,jdbcType=VARCHAR},
      </if>
      <if test="cfgValue != null">
        #{cfgValue,jdbcType=VARCHAR},
      </if>
      <if test="cfgDescription != null">
        #{cfgDescription,jdbcType=VARCHAR},
      </if>
      <if test="effectFlag != null">
        #{effectFlag,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.model.TLivelihoodConfigDoExample" resultType="java.lang.Long">
    select count(*) from t_livelihood_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_livelihood_config
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.cfgKey != null">
        cfg_key = #{record.cfgKey,jdbcType=VARCHAR},
      </if>
      <if test="record.cfgValue != null">
        cfg_value = #{record.cfgValue,jdbcType=VARCHAR},
      </if>
      <if test="record.cfgDescription != null">
        CFG_DESCRIPTION = #{record.cfgDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.effectFlag != null">
        EFFECT_FLAG = #{record.effectFlag,jdbcType=VARCHAR},
      </if>
      <if test="record.createdBy != null">
        created_by = #{record.createdBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedBy != null">
        updated_by = #{record.updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedAt != null">
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_livelihood_config
    set id = #{record.id,jdbcType=BIGINT},
      cfg_key = #{record.cfgKey,jdbcType=VARCHAR},
      cfg_value = #{record.cfgValue,jdbcType=VARCHAR},
      CFG_DESCRIPTION = #{record.cfgDescription,jdbcType=VARCHAR},
      EFFECT_FLAG = #{record.effectFlag,jdbcType=VARCHAR},
      created_by = #{record.createdBy,jdbcType=VARCHAR},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_by = #{record.updatedBy,jdbcType=VARCHAR},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.model.TLivelihoodConfigDo">
    update t_livelihood_config
    <set>
      <if test="cfgKey != null">
        cfg_key = #{cfgKey,jdbcType=VARCHAR},
      </if>
      <if test="cfgValue != null">
        cfg_value = #{cfgValue,jdbcType=VARCHAR},
      </if>
      <if test="cfgDescription != null">
        CFG_DESCRIPTION = #{cfgDescription,jdbcType=VARCHAR},
      </if>
      <if test="effectFlag != null">
        EFFECT_FLAG = #{effectFlag,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.model.TLivelihoodConfigDo">
    update t_livelihood_config
    set cfg_key = #{cfgKey,jdbcType=VARCHAR},
      cfg_value = #{cfgValue,jdbcType=VARCHAR},
      CFG_DESCRIPTION = #{cfgDescription,jdbcType=VARCHAR},
      EFFECT_FLAG = #{effectFlag,jdbcType=VARCHAR},
      created_by = #{createdBy,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_by = #{updatedBy,jdbcType=VARCHAR},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>