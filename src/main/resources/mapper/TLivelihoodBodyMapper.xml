<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.TLivelihoodBodyMapper">
  <resultMap id="BaseResultMap" type="com.model.TLivelihoodBodyDo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="bar_code" jdbcType="VARCHAR" property="barCode" />
    <result column="org_code" jdbcType="VARCHAR" property="orgCode" />
    <result column="org_name" jdbcType="VARCHAR" property="orgName" />
    <result column="body_one" jdbcType="VARCHAR" property="bodyOne" />
    <result column="body_two" jdbcType="VARCHAR" property="bodyTwo" />
    <result column="body_three" jdbcType="VARCHAR" property="bodyThree" />
    <result column="body_type" jdbcType="VARCHAR" property="bodyType" />
    <result column="effect_flag" jdbcType="VARCHAR" property="effectFlag" />
    <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_by" jdbcType="VARCHAR" property="updatedBy" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, bar_code, org_code, org_name, body_one, body_two, body_three, body_type, effect_flag, 
    created_by, created_at, updated_by, updated_at
  </sql>
  <select id="selectByExample" parameterType="com.model.TLivelihoodBodyDoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_livelihood_body
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_livelihood_body
    where id = #{id,jdbcType=BIGINT}
  </select>
  <insert id="insert" parameterType="com.model.TLivelihoodBodyDo">
    insert into t_livelihood_body (id, bar_code, org_code, 
      org_name, body_one, body_two, 
      body_three, body_type, effect_flag, 
      created_by, created_at, updated_by, 
      updated_at)
    values (#{id,jdbcType=BIGINT}, #{barCode,jdbcType=VARCHAR}, #{orgCode,jdbcType=VARCHAR}, 
      #{orgName,jdbcType=VARCHAR}, #{bodyOne,jdbcType=VARCHAR}, #{bodyTwo,jdbcType=VARCHAR}, 
      #{bodyThree,jdbcType=VARCHAR}, #{bodyType,jdbcType=VARCHAR}, #{effectFlag,jdbcType=VARCHAR}, 
      #{createdBy,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedBy,jdbcType=VARCHAR}, 
      #{updatedAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.model.TLivelihoodBodyDo">
    insert into t_livelihood_body
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="barCode != null">
        bar_code,
      </if>
      <if test="orgCode != null">
        org_code,
      </if>
      <if test="orgName != null">
        org_name,
      </if>
      <if test="bodyOne != null">
        body_one,
      </if>
      <if test="bodyTwo != null">
        body_two,
      </if>
      <if test="bodyThree != null">
        body_three,
      </if>
      <if test="bodyType != null">
        body_type,
      </if>
      <if test="effectFlag != null">
        effect_flag,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="barCode != null">
        #{barCode,jdbcType=VARCHAR},
      </if>
      <if test="orgCode != null">
        #{orgCode,jdbcType=VARCHAR},
      </if>
      <if test="orgName != null">
        #{orgName,jdbcType=VARCHAR},
      </if>
      <if test="bodyOne != null">
        #{bodyOne,jdbcType=VARCHAR},
      </if>
      <if test="bodyTwo != null">
        #{bodyTwo,jdbcType=VARCHAR},
      </if>
      <if test="bodyThree != null">
        #{bodyThree,jdbcType=VARCHAR},
      </if>
      <if test="bodyType != null">
        #{bodyType,jdbcType=VARCHAR},
      </if>
      <if test="effectFlag != null">
        #{effectFlag,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.model.TLivelihoodBodyDoExample" resultType="java.lang.Long">
    select count(*) from t_livelihood_body
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_livelihood_body
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.barCode != null">
        bar_code = #{record.barCode,jdbcType=VARCHAR},
      </if>
      <if test="record.orgCode != null">
        org_code = #{record.orgCode,jdbcType=VARCHAR},
      </if>
      <if test="record.orgName != null">
        org_name = #{record.orgName,jdbcType=VARCHAR},
      </if>
      <if test="record.bodyOne != null">
        body_one = #{record.bodyOne,jdbcType=VARCHAR},
      </if>
      <if test="record.bodyTwo != null">
        body_two = #{record.bodyTwo,jdbcType=VARCHAR},
      </if>
      <if test="record.bodyThree != null">
        body_three = #{record.bodyThree,jdbcType=VARCHAR},
      </if>
      <if test="record.bodyType != null">
        body_type = #{record.bodyType,jdbcType=VARCHAR},
      </if>
      <if test="record.effectFlag != null">
        effect_flag = #{record.effectFlag,jdbcType=VARCHAR},
      </if>
      <if test="record.createdBy != null">
        created_by = #{record.createdBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedBy != null">
        updated_by = #{record.updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedAt != null">
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_livelihood_body
    set id = #{record.id,jdbcType=BIGINT},
      bar_code = #{record.barCode,jdbcType=VARCHAR},
      org_code = #{record.orgCode,jdbcType=VARCHAR},
      org_name = #{record.orgName,jdbcType=VARCHAR},
      body_one = #{record.bodyOne,jdbcType=VARCHAR},
      body_two = #{record.bodyTwo,jdbcType=VARCHAR},
      body_three = #{record.bodyThree,jdbcType=VARCHAR},
      body_type = #{record.bodyType,jdbcType=VARCHAR},
      effect_flag = #{record.effectFlag,jdbcType=VARCHAR},
      created_by = #{record.createdBy,jdbcType=VARCHAR},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_by = #{record.updatedBy,jdbcType=VARCHAR},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.model.TLivelihoodBodyDo">
    update t_livelihood_body
    <set>
      <if test="barCode != null">
        bar_code = #{barCode,jdbcType=VARCHAR},
      </if>
      <if test="orgCode != null">
        org_code = #{orgCode,jdbcType=VARCHAR},
      </if>
      <if test="orgName != null">
        org_name = #{orgName,jdbcType=VARCHAR},
      </if>
      <if test="bodyOne != null">
        body_one = #{bodyOne,jdbcType=VARCHAR},
      </if>
      <if test="bodyTwo != null">
        body_two = #{bodyTwo,jdbcType=VARCHAR},
      </if>
      <if test="bodyThree != null">
        body_three = #{bodyThree,jdbcType=VARCHAR},
      </if>
      <if test="bodyType != null">
        body_type = #{bodyType,jdbcType=VARCHAR},
      </if>
      <if test="effectFlag != null">
        effect_flag = #{effectFlag,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.model.TLivelihoodBodyDo">
    update t_livelihood_body
    set bar_code = #{barCode,jdbcType=VARCHAR},
      org_code = #{orgCode,jdbcType=VARCHAR},
      org_name = #{orgName,jdbcType=VARCHAR},
      body_one = #{bodyOne,jdbcType=VARCHAR},
      body_two = #{bodyTwo,jdbcType=VARCHAR},
      body_three = #{bodyThree,jdbcType=VARCHAR},
      body_type = #{bodyType,jdbcType=VARCHAR},
      effect_flag = #{effectFlag,jdbcType=VARCHAR},
      created_by = #{createdBy,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_by = #{updatedBy,jdbcType=VARCHAR},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <delete id="delBody" parameterType="java.lang.Integer">
    DELETE FROM t_livelihood_body WHERE id = #{id,jdbcType=BIGINT}
  </delete>
</mapper>